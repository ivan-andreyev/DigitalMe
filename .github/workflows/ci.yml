name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies (excluding MAUI)
      run: |
        dotnet restore DigitalMe/DigitalMe.csproj
        dotnet restore tests/DigitalMe.Tests.Unit/DigitalMe.Tests.Unit.csproj
        dotnet restore tests/DigitalMe.Tests.Integration/DigitalMe.Tests.Integration.csproj
        dotnet restore src/DigitalMe.Web/DigitalMe.Web.csproj
    
    - name: Build (excluding MAUI)
      run: |
        dotnet build DigitalMe/DigitalMe.csproj --no-restore --configuration Release
        dotnet build tests/DigitalMe.Tests.Unit/DigitalMe.Tests.Unit.csproj --no-restore --configuration Release
        dotnet build tests/DigitalMe.Tests.Integration/DigitalMe.Tests.Integration.csproj --no-restore --configuration Release
        dotnet build src/DigitalMe.Web/DigitalMe.Web.csproj --no-restore --configuration Release
    
    - name: Run Unit Tests
      run: dotnet test tests/DigitalMe.Tests.Unit --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
    
    - name: Run Integration Tests
      run: dotnet test tests/DigitalMe.Tests.Integration --no-build --configuration Release --verbosity normal
      env:
        ASPNETCORE_ENVIRONMENT: Testing
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: '**/coverage.cobertura.xml'
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    name: Build Docker Image
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./DigitalMe/Dockerfile
        push: false
        tags: digitalme:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max