name: Deploy to Cloud Run

on:
  push:
    branches: [ master ]
  
  # Allow manual runs
  workflow_dispatch:

env:
  PROJECT_ID: digitalme-470613
  REGION: us-central1

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies (excluding MAUI)
      run: |
        dotnet restore DigitalMe/DigitalMe.csproj
        dotnet restore tests/DigitalMe.Tests.Unit/DigitalMe.Tests.Unit.csproj
        dotnet restore tests/DigitalMe.Tests.Integration/DigitalMe.Tests.Integration.csproj
        dotnet restore src/DigitalMe.Web/DigitalMe.Web.csproj
    
    - name: Build (excluding MAUI)
      run: |
        dotnet build DigitalMe/DigitalMe.csproj --no-restore --configuration Release
        dotnet build tests/DigitalMe.Tests.Unit/DigitalMe.Tests.Unit.csproj --no-restore --configuration Release
        dotnet build tests/DigitalMe.Tests.Integration/DigitalMe.Tests.Integration.csproj --no-restore --configuration Release
        dotnet build src/DigitalMe.Web/DigitalMe.Web.csproj --no-restore --configuration Release
    
    - name: Run Unit Tests
      run: dotnet test tests/DigitalMe.Tests.Unit --no-build --configuration Release --verbosity normal
    
    - name: Run Integration Tests
      run: dotnet test tests/DigitalMe.Tests.Integration --no-build --configuration Release --verbosity normal
      env:
        ASPNETCORE_ENVIRONMENT: Testing

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: test
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker gcr.io

    - name: Build and Deploy with Cloud Build
      run: |
        gcloud builds submit \
          --config=cloudbuild.yaml \
          --project=$PROJECT_ID \
          --substitutions=COMMIT_SHA=${GITHUB_SHA}

    - name: Show deployment URLs
      run: |
        echo "ðŸš€ Deployment completed successfully!"
        echo "API URL: https://digitalme-api-llig7ks2ca-uc.a.run.app"  
        echo "Web URL: https://digitalme-web-llig7ks2ca-uc.a.run.app"
        echo "Commit: ${GITHUB_SHA}"