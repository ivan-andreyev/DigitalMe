# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–≤—å—é –ø–ª–∞–Ω–æ–≤
# –í–µ—Ä—Å–∏—è: 2.0 (–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è)
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã

param(
    [string]$Path = "Docs/PLAN",
    [switch]$AutoFix = $false,
    [switch]$GenerateReport = $true,
    [switch]$Interactive = $true,
    [switch]$CommitChanges = $false
)

# –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω —á–µ—Ä–µ–∑ &

Write-Host "ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ï–í–¨–Æ" -ForegroundColor Green
$modeText = if ($AutoFix) { "–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø" } else { "–¢–û–õ–¨–ö–û –ê–ù–ê–õ–ò–ó" }
Write-Host "–†–µ–∂–∏–º: $modeText" -ForegroundColor Yellow
Write-Host "=" * 70

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤
function Invoke-AutoFileSizefix {
    param([array]$CriticalFiles, [string]$BasePath)
    
    if ($CriticalFiles.Count -eq 0) {
        Write-Host "‚úÖ –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞" -ForegroundColor Green
        return @()
    }
    
    Write-Host "`nüîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ó–ú–ï–†–û–í –§–ê–ô–õ–û–í:" -ForegroundColor Cyan
    
    $fixedFiles = @()
    
    foreach ($file in $CriticalFiles) {
        $filePath = $file.Path
        $lines = $file.Lines
        
        Write-Host "`nüìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é: $filePath ($lines —Å—Ç—Ä–æ–∫)" -ForegroundColor Yellow
        
        if ($Interactive) {
            $response = Read-Host "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n/s=skip)"
            if ($response -eq 'n' -or $response -eq 's') {
                Write-Host "‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞—é —Ñ–∞–π–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -ForegroundColor Gray
                continue
            }
        }
        
        try {
            # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏
            $fileName = [System.IO.Path]::GetFileNameWithoutExtension($filePath)
            $directory = [System.IO.Path]::GetDirectoryName($filePath)
            $catalogDir = Join-Path $directory $fileName
            
            if (-not (Test-Path $catalogDir)) {
                New-Item -ItemType Directory -Path $catalogDir -Force | Out-Null
                Write-Host "üìÅ –°–æ–∑–¥–∞–Ω –∫–∞—Ç–∞–ª–æ–≥: $catalogDir" -ForegroundColor Green
            }
            
            # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            $content = Get-Content $filePath -Encoding UTF8
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏—è –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º ##
            $sections = @()
            $currentSection = @{
                Title = "–í–≤–µ–¥–µ–Ω–∏–µ"
                StartLine = 0
                Lines = @()
            }
            
            for ($i = 0; $i -lt $content.Length; $i++) {
                $line = $content[$i]
                
                if ($line -match '^## (.+)$') {
                    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–µ–∫—Ü–∏—é
                    if ($currentSection.Lines.Count -gt 0) {
                        $currentSection.EndLine = $i - 1
                        $sections += $currentSection
                    }
                    
                    # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —Å–µ–∫—Ü–∏—é
                    $currentSection = @{
                        Title = $matches[1]
                        StartLine = $i
                        Lines = @()
                    }
                }
                
                $currentSection.Lines += $line
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–µ–∫—Ü–∏—é
            if ($currentSection.Lines.Count -gt 0) {
                $currentSection.EndLine = $content.Length - 1
                $sections += $currentSection
            }
            
            # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Å–µ–∫—Ü–∏–π
            $createdFiles = @()
            $coordinationContent = @()
            $coordinationContent += "# $fileName"
            $coordinationContent += ""
            $coordinationContent += "**–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ø–ª–∞–Ω**: [$(Split-Path $directory -Leaf).md](../$(Split-Path $directory -Leaf).md)"
            $coordinationContent += ""
            $coordinationContent += "## –û–±–∑–æ—Ä"
            $coordinationContent += ""
            $coordinationContent += "–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –±—ã–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω –∏–∑ —Ñ–∞–π–ª–∞ $lines —Å—Ç—Ä–æ–∫ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
            $coordinationContent += ""
            $coordinationContent += "## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞"
            $coordinationContent += ""
            
            for ($sectionIndex = 0; $sectionIndex -lt $sections.Count; $sectionIndex++) {
                $section = $sections[$sectionIndex]
                
                if ($section.Lines.Count -lt 10) {
                    continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–µ —Å–µ–∫—Ü–∏–∏
                }
                
                $sectionFileName = "$fileName-$($sectionIndex + 1)-$($section.Title -replace '[^\w\s-]', '' -replace '\s+', '-').md"
                $sectionFilePath = Join-Path $catalogDir $sectionFileName
                
                # –°–æ–∑–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ–∫—Ü–∏–∏
                $sectionContent = @()
                $sectionContent += "# $($section.Title)"
                $sectionContent += ""
                $sectionContent += "**–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –ø–ª–∞–Ω**: [$(Split-Path $filePath -Leaf)](../$(Split-Path $filePath -Leaf))"
                $sectionContent += ""
                $sectionContent += $section.Lines[1..($section.Lines.Count - 1)] # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ ##
                $sectionContent += ""
                $sectionContent += "---"
                $sectionContent += "**–°—Ç–∞—Ç—É—Å**: ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–æ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å–µ–∫—Ü–∏–∏
                $sectionContent | Out-File -FilePath $sectionFilePath -Encoding UTF8
                $createdFiles += $sectionFilePath
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
                $relativePath = "./$fileName/$sectionFileName"
                $coordinationContent += "### ‚úÖ [$($sectionIndex + 1). $($section.Title)]($relativePath)"
                $coordinationContent += "- $($section.Lines.Count) —Å—Ç—Ä–æ–∫"
                $coordinationContent += ""
            }
            
            $coordinationContent += "---"
            $coordinationContent += "**–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏**:"
            $coordinationContent += "- **–ë—ã–ª–æ**: 1 —Ñ–∞–π–ª, $lines —Å—Ç—Ä–æ–∫"
            $coordinationContent += "- **–°—Ç–∞–ª–æ**: $($createdFiles.Count) —Ñ–∞–π–ª–æ–≤, –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä"
            $coordinationContent += "- **–î–∞—Ç–∞**: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
            $coordinationContent | Out-File -FilePath $filePath -Encoding UTF8
            
            Write-Host "‚úÖ –§–∞–π–ª –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞–Ω:" -ForegroundColor Green
            Write-Host "   üìÑ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: $(Split-Path $filePath -Leaf) ($($coordinationContent.Count) —Å—Ç—Ä–æ–∫)" -ForegroundColor Green
            Write-Host "   üìÅ –°–æ–∑–¥–∞–Ω–æ –ø–æ–¥—Ñ–∞–π–ª–æ–≤: $($createdFiles.Count)" -ForegroundColor Green
            
            $fixedFiles += @{
                OriginalFile = $filePath
                OriginalLines = $lines
                CoordinationFile = $filePath
                CreatedFiles = $createdFiles
                NewLines = $coordinationContent.Count
            }
            
        }
        catch {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ $filePath`: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
    
    return $fixedFiles
}

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
function Invoke-AutoCatalogization {
    param([array]$CatalogPatterns, [string]$BasePath)
    
    if ($CatalogPatterns.Count -eq 0) {
        Write-Host "‚úÖ –ù–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏–∏" -ForegroundColor Green
        return @()
    }
    
    Write-Host "`nüîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ö–ê–¢–ê–õ–û–ì–ò–ó–ê–¶–ò–Ø –ü–ê–¢–¢–ï–†–ù–û–í:" -ForegroundColor Cyan
    
    $processedPatterns = @()
    
    foreach ($pattern in $CatalogPatterns) {
        $patternName = $pattern.Pattern
        $files = $pattern.Files
        
        Write-Host "`nüìã –ü–∞—Ç—Ç–µ—Ä–Ω: $patternName ‚Üí $($files.Count) —Ñ–∞–π–ª–æ–≤" -ForegroundColor Yellow
        
        if ($Interactive) {
            Write-Host "–§–∞–π–ª—ã –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏–∏:"
            $files | ForEach-Object { Write-Host "   - $($_)" -ForegroundColor Gray }
            
            $response = Read-Host "–ö–∞—Ç–∞–ª–æ–≥–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n/s=skip)"
            if ($response -eq 'n' -or $response -eq 's') {
                Write-Host "‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞—é –ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -ForegroundColor Gray
                continue
            }
        }
        
        try {
            # –ù–∞—Ö–æ–¥–∏–º –æ–±—â–∏–π –∫–∞—Ç–∞–ª–æ–≥
            $firstFile = $files[0]
            $commonDir = Split-Path $firstFile -Parent
            $catalogDirName = "$patternName-Group"
            $catalogDirPath = Join-Path $commonDir $catalogDirName
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –≥—Ä—É–ø–ø—ã
            if (-not (Test-Path $catalogDirPath)) {
                New-Item -ItemType Directory -Path $catalogDirPath -Force | Out-Null
                Write-Host "üìÅ –°–æ–∑–¥–∞–Ω –∫–∞—Ç–∞–ª–æ–≥: $catalogDirPath" -ForegroundColor Green
            }
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª—ã –≤ –∫–∞—Ç–∞–ª–æ–≥
            $movedFiles = @()
            foreach ($file in $files) {
                $fileName = Split-Path $file -Leaf
                $newPath = Join-Path $catalogDirPath $fileName
                
                Move-Item -Path $file -Destination $newPath -Force
                $movedFiles += $newPath
                Write-Host "üìù –ü–µ—Ä–µ–º–µ—â–µ–Ω: $fileName ‚Üí $catalogDirName/" -ForegroundColor Green
            }
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –≥—Ä—É–ø–ø—ã
            $coordFileName = "$patternName-Group.md"
            $coordFilePath = Join-Path $commonDir $coordFileName
            
            $coordContent = @()
            $coordContent += "# $patternName Group"
            $coordContent += ""
            $coordContent += "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ —Ñ–∞–π–ª–æ–≤ —Å –æ–±—â–∏–º –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º `$patternName`."
            $coordContent += ""
            $coordContent += "## –§–∞–π–ª—ã –≤ –≥—Ä—É–ø–ø–µ"
            $coordContent += ""
            
            foreach ($movedFile in $movedFiles) {
                $fileName = Split-Path $movedFile -Leaf
                $relativePath = "./$catalogDirName/$fileName"
                $coordContent += "- [$fileName]($relativePath)"
            }
            
            $coordContent += ""
            $coordContent += "---"
            $coordContent += "**–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∏—Ä–æ–≤–∞–Ω–æ**: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
            
            $coordContent | Out-File -FilePath $coordFilePath -Encoding UTF8
            
            Write-Host "‚úÖ –ö–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $($movedFiles.Count) —Ñ–∞–π–ª–æ–≤ –≤ $catalogDirName/" -ForegroundColor Green
            
            $processedPatterns += @{
                Pattern = $patternName
                CatalogDirectory = $catalogDirPath
                CoordinationFile = $coordFilePath
                MovedFiles = $movedFiles
            }
            
        }
        catch {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ $patternName`: $($_.Exception.Message)" -ForegroundColor Red
        }
    }
    
    return $processedPatterns
}

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
function New-ReviewReport {
    param(
        [hashtable]$ValidationResults,
        [array]$FixedFiles,
        [array]$ProcessedPatterns,
        [string]$OutputPath
    )
    
    Write-Host "`nüìä –ì–ï–ù–ï–†–ê–¶–ò–Ø –û–¢–ß–ï–¢–ê –†–ï–í–¨–Æ..." -ForegroundColor Cyan
    
    $report = @()
    $report += "# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Ä–µ–≤—å—é —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
    $report += ""
    $report += "**–î–∞—Ç–∞**: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
    $report += "**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç**: AutomatedReviewSystem.ps1 v2.0"
    $report += ""
    
    # –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    $totalIssues = 0
    $totalIssues += $ValidationResults.FileSizes.Critical.Count
    $totalIssues += $ValidationResults.FileSizes.Warning.Count
    $totalIssues += $ValidationResults.CatalogPatterns.Count
    $totalIssues += $ValidationResults.CoordFiles.Count
    $totalIssues += $ValidationResults.BrokenLinks.Count
    
    $report += "## üìä –°–≤–æ–¥–∫–∞"
    $report += ""
    $report += "| –¢–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è | –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ | –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ |"
    $report += "|---------------|------------|------------|"
    $report += "| –§–∞–π–ª—ã >400 —Å—Ç—Ä–æ–∫ | $($ValidationResults.FileSizes.Critical.Count) | $($FixedFiles.Count) |"
    $report += "| –§–∞–π–ª—ã >250 —Å—Ç—Ä–æ–∫ | $($ValidationResults.FileSizes.Warning.Count) | - |"
    $report += "| –ü–∞—Ç—Ç–µ—Ä–Ω—ã –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏–∏ | $($ValidationResults.CatalogPatterns.Count) | $($ProcessedPatterns.Count) |"
    $report += "| –ü—É—Å—Ç—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ | $($ValidationResults.CoordFiles.Count) | - |"
    $report += "| –ë–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏ | $($ValidationResults.BrokenLinks.Count) | - |"
    $report += "| **–ò–¢–û–ì–û** | **$totalIssues** | **$($FixedFiles.Count + $ProcessedPatterns.Count)** |"
    $report += ""
    
    # –î–µ—Ç–∞–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤
    if ($FixedFiles.Count -gt 0) {
        $report += "## üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤"
        $report += ""
        foreach ($fix in $FixedFiles) {
            $report += "### ‚úÖ $(Split-Path $fix.OriginalFile -Leaf)"
            $report += "- **–ë—ã–ª–æ**: $($fix.OriginalLines) —Å—Ç—Ä–æ–∫ (–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï)"
            $report += "- **–°—Ç–∞–ª–æ**: –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª $($fix.NewLines) —Å—Ç—Ä–æ–∫ + $($fix.CreatedFiles.Count) –ø–æ–¥—Ñ–∞–π–ª–æ–≤"
            $report += "- **–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã**:"
            foreach ($createdFile in $fix.CreatedFiles) {
                $report += "  - $(Split-Path $createdFile -Leaf)"
            }
            $report += ""
        }
    }
    
    # –î–µ—Ç–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏–∏
    if ($ProcessedPatterns.Count -gt 0) {
        $report += "## üìÅ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏—è"
        $report += ""
        foreach ($pattern in $ProcessedPatterns) {
            $report += "### ‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω: $($pattern.Pattern)"
            $report += "- **–ö–∞—Ç–∞–ª–æ–≥**: $(Split-Path $pattern.CatalogDirectory -Leaf)/"
            $report += "- **–§–∞–π–ª–æ–≤ –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ**: $($pattern.MovedFiles.Count)"
            $report += "- **–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª**: $(Split-Path $pattern.CoordinationFile -Leaf)"
            $report += ""
        }
    }
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    $report += "## üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
    $report += ""
    if ($ValidationResults.FileSizes.Warning.Count -gt 0) {
        $report += "- üìù **–§–∞–π–ª—ã >250 —Å—Ç—Ä–æ–∫**: –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ $($ValidationResults.FileSizes.Warning.Count) —Ñ–∞–π–ª–æ–≤"
    }
    if ($ValidationResults.BrokenLinks.Count -gt 0) {
        $report += "- üîó **–ë–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏**: –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∞–Ω—É–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ $($ValidationResults.BrokenLinks.Count) —Å—Å—ã–ª–æ–∫"
    }
    if ($ValidationResults.CoordFiles.Count -gt 0) {
        $report += "- üìÇ **–ü—É—Å—Ç—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏**: –£–¥–∞–ª–∏—Ç–µ –∏–ª–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ $($ValidationResults.CoordFiles.Count) –∫–∞—Ç–∞–ª–æ–≥–æ–≤"
    }
    
    $report += ""
    $report += "---"
    $report += "**–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥**: –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    $reportPath = Join-Path $OutputPath "Review-Report-$(Get-Date -Format 'yyyy-MM-dd-HH-mm').md"
    $report | Out-File -FilePath $reportPath -Encoding UTF8
    
    Write-Host "üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $reportPath" -ForegroundColor Green
    return $reportPath
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
try {
    # –®–∞–≥ 1: –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    Write-Host "üîç –≠—Ç–∞–ø 1: –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã..." -ForegroundColor Cyan
    $validatorPath = Join-Path $PSScriptRoot "PlanStructureValidator.ps1"
    $validationResults = & $validatorPath -Path $Path
    
    if (-not $validationResults) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑–æ–≤—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä." -ForegroundColor Red
        exit 1
    }
    
    # –®–∞–≥ 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã)
    $fixedFiles = @()
    $processedPatterns = @()
    
    if ($AutoFix) {
        Write-Host "`nü§ñ –≠—Ç–∞–ø 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..." -ForegroundColor Cyan
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        $fixedFiles = Invoke-AutoFileSizefix -CriticalFiles $validationResults.FileSizes.Critical -BasePath $Path
        
        # –ö–∞—Ç–∞–ª–æ–≥–∏–∑–∞—Ü–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ —Å–ª—É—á–∞–∏)
        $simplePatterns = $validationResults.CatalogPatterns | Where-Object { $_.Count -ge 3 -and $_.Count -le 10 }
        $processedPatterns = Invoke-AutoCatalogization -CatalogPatterns $simplePatterns -BasePath $Path
    }
    
    # –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    if ($GenerateReport) {
        Write-Host "`nüìä –≠—Ç–∞–ø 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞..." -ForegroundColor Cyan
        $reportPath = New-ReviewReport -ValidationResults $validationResults -FixedFiles $fixedFiles -ProcessedPatterns $processedPatterns -OutputPath "Tools"
    }
    
    # –®–∞–≥ 4: –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
    if ($CommitChanges -and ($fixedFiles.Count -gt 0 -or $processedPatterns.Count -gt 0)) {
        Write-Host "`nüìù –≠—Ç–∞–ø 4: –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..." -ForegroundColor Cyan
        
        $commitMessage = "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–ª–∞–Ω–æ–≤`n`n"
        $commitMessage += "- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $($fixedFiles.Count)`n"
        $commitMessage += "- –ö–∞—Ç–∞–ª–æ–≥–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤: $($processedPatterns.Count)`n"
        $commitMessage += "- –û—Ç—á–µ—Ç: $(Split-Path $reportPath -Leaf)"
        
        git add .
        git commit -m $commitMessage
        
        Write-Host "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –≤ git" -ForegroundColor Green
    }
    
    # –ò—Ç–æ–≥–∏
    Write-Host "`n" + "=" * 70
    Write-Host "üéâ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–û–ï –†–ï–í–¨–Æ –ó–ê–í–ï–†–®–ï–ù–û!" -ForegroundColor Green
    Write-Host "üìä –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: $($fixedFiles.Count + $processedPatterns.Count) –Ω–∞—Ä—É—à–µ–Ω–∏–π" -ForegroundColor Yellow
    
    if ($GenerateReport) {
        Write-Host "üìÑ –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç: $reportPath" -ForegroundColor Yellow
    }
    
    Write-Host "`nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ó–∞–ø—É—Å—Ç–∏—Ç–µ PlanStructureValidator.ps1 –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" -ForegroundColor Cyan
    
}
catch {
    Write-Host "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}